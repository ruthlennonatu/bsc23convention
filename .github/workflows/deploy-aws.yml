name: Deploy Docker Container to AWS EC2

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - adding-ec2-deploy

env:
  DOCKER_REGISTRY_USERNAME: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
  DOCKER_REGISTRY_TOKEN: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
  AWS_PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY }}

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Registry
        uses: docker/login-action@v1
        with:
          username: ${{ env.DOCKER_REGISTRY_USERNAME }}
          password: ${{ env.DOCKER_REGISTRY_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./Source
          push: true
          dockerfile: ./Dockerfile
          tags: your-docker-username/your-repository-name:tagname

  deploy_to_aws:
    needs: build_and_push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Docker Registry
        uses: docker/login-action@v1
        with:
          username: ${{ env.DOCKER_REGISTRY_USERNAME }}
          password: ${{ env.DOCKER_REGISTRY_TOKEN }}

      - name: Set permissions for private key
        run: |
          echo "${{ env.AWS_PRIVATE_KEY }}" > aws-key.pem
          chmod 600 aws-key.pem

      - name: SSH into AWS EC2 instance and update Docker image
        run: |
          ssh -o StrictHostKeyChecking=no -i aws-key.pem ubuntu@your-ec2-instance-url 'sudo docker pull your-docker-username/your-repository-name:tagname'

      - name: Stop and remove existing Docker container on AWS EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i aws-key.pem ubuntu@your-ec2-instance-url 'sudo docker stop your-container-name || true'
          ssh -o StrictHostKeyChecking=no -i aws-key.pem ubuntu@your-ec2-instance-url 'sudo docker rm your-container-name || true'

      - name: Run a new Docker container on AWS EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i aws-key.pem ubuntu@your-ec2-instance-url 'sudo docker run -d --name your-container-name -p 8000:8000 your-docker-username/your-repository-name:tagname'
